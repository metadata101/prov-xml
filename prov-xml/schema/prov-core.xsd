<?xml version="1.0" encoding="utf-8"?>

<!-- 
     In PROV-DM, all ids are qualified names, specified as prov:QualifiedName in PROV-N.
     In this schema, all ids are instead defined as xsd:QNames. 

		 This is prov-xml.iso - replace prov-xml any/anyAttribute with ISO19115-3 elements that are 
		 relevant to a provenance definition that operates on ISO19115-3 records and fragments
  -->


<xs:schema targetNamespace="http://www.w3.org/ns/prov#"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:prov="http://www.w3.org/ns/prov#"
           xmlns:cu="http://www.w3.org/1999/xhtml/datatypes/"
           xmlns:xml="http://www.w3.org/XML/1998/namespace"
           xmlns:dc="http://purl.org/dc/elements/1.1/"
           xmlns:dct="http://purl.org/dc/terms/"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified">



  <!-- <xs:import namespace="http://www.w3.org/1999/xhtml/datatypes/" /> -->
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" 
             schemaLocation="http://www.w3.org/2001/xml.xsd"/>

  <xs:import namespace="http://purl.org/dc/elements/1.1/" 
             schemaLocation="dc.xsd"/>

  <xs:import namespace="http://purl.org/dc/terms/" 
             schemaLocation="dcterms.xsd"/>

  <!-- Component 1 -->

	<!-- From prov-xml doc: An entity is a physical, digital, conceptual, or other kind of thing with some fixed aspects; 
	     entities may be real or imaginary. 

			 In this implementation: an entity points to an OGC WPS parameter:

			 - prov:type is the type of parameter: boolean, integer, string, real, metadata
			 - prov:label is the real world description of the parameter
			 - prov:id is the short name of the parameter
			 - prov:location is optional unless type is metadata, in which case it points to the URL of the metadata record eg.
			   http://geonetwork-catalog.com/geonetwork/srv/eng/xml.metadata.get?uuid=8a8a5be3-765a-4d5c-9eb6-0e5feb93767e

	 -->
  <xs:complexType name="Entity">
    <xs:sequence>
        <!-- prov attributes -->
        <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:location" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:value" minOccurs="0"/>
				<!-- <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/> -->
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
    <!-- <xs:anyAttribute namespace="##other" processContents="lax"/> -->
  </xs:complexType>  

	<!-- From prov-xml doc: An activity is something that occurs over a period of time and acts upon or with entities; it may        include consuming, processing, transforming, modifying, relocating, using, or generating entities. 
	 -->

  <xs:complexType name="Activity">
    <xs:sequence>
        <xs:element name="startTime" type="xs:dateTime" minOccurs="0"/> 
        <xs:element name="endTime" type="xs:dateTime" minOccurs="0"/>
        <!-- prov attributes --> 
        <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:location" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
        <!-- <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/> -->
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
    <!-- <xs:anyAttribute namespace="##other" processContents="lax"/> -->
  </xs:complexType>

	<!-- From prov-xml doc: Generation is the completion of production of a new entity by an activity. 
	     This entity did not exist before generation and becomes available for usage after this generation. -->
  <xs:complexType name="Generation">
    <xs:sequence>
        <xs:element name="entity" type="prov:IDRef"/>
        <xs:element name="activity" type="prov:IDRef" minOccurs="0"/>
        <xs:element name="time" type="xs:dateTime" minOccurs="0"/>
        <!-- prov attributes -->
        <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:location" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:role" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
        <!-- <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/> -->
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
    <!-- <xs:anyAttribute namespace="##other" processContents="lax"/> -->
  </xs:complexType>

	<!-- From prov-xml doc: Usage is the beginning of utilizing an entity by an activity. Before usage, the activity had not 
	     begun to utilize this entity and could not have been affected by the entity. -->
  <xs:complexType name="Usage">
    <xs:sequence>
        <xs:element name="activity" type="prov:IDRef"/>
        <xs:element name="entity" type="prov:IDRef" minOccurs="0"/>
        <xs:element name="time" type="xs:dateTime" minOccurs="0"/>
        <!-- prov attributes -->
        <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:location" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:role" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
        <!-- <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/> -->
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
    <!-- <xs:anyAttribute namespace="##other" processContents="lax"/> -->
  </xs:complexType>

	<!-- From prov-xml doc: Communication is the exchange of some unspecified entity by two activities, one activity 
	     using some entity generated by the other. -->
  <xs:complexType name="Communication">
    <xs:sequence>
        <xs:element name="informed" type="prov:IDRef"/>
        <xs:element name="informant" type="prov:IDRef"/>
        <!-- prov attributes -->
        <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
        <!-- <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/> -->
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
    <!-- <xs:anyAttribute namespace="##other" processContents="lax"/> -->
  </xs:complexType>

	<!-- From prov-xml doc: Start is when an activity is deemed to have been started by an entity, known as trigger. 
	     The activity did not exist before its start. Any usage, generation, or invalidation involving an activity follows 
			 the activity's start. A start may refer to a trigger entity that set off the activity, or to an activity, 
			 known as starter, that generated the trigger. -->
  <xs:complexType name="Start">
    <xs:sequence>
        <xs:element name="activity" type="prov:IDRef"/>
        <xs:element name="trigger" type="prov:IDRef" minOccurs="0"/>
        <xs:element name="starter" type="prov:IDRef" minOccurs="0"/>
        <xs:element name="time" type="xs:dateTime" minOccurs="0"/>
        <!-- prov attributes -->
        <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:location" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:role" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
        <!-- <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/> -->
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
    <!-- <xs:anyAttribute namespace="##other" processContents="lax"/> -->
  </xs:complexType>

	<!-- From prov-xml doc: End is when an activity is deemed to have been ended by an entity, known as trigger. 
			 The activity no longer exists after its end. Any usage, generation, or invalidation involving an activity 
			 precedes the activity's end. An end may refer to a trigger entity that terminated the activity, or to an activity, 
			 known as ender that generated the trigger. -->
  <xs:complexType name="End">
    <xs:sequence>
        <xs:element name="activity" type="prov:IDRef"/>
        <xs:element name="trigger" type="prov:IDRef"  minOccurs="0"/>
        <xs:element name="ender" type="prov:IDRef" minOccurs="0"/>
        <xs:element name="time" type="xs:dateTime" minOccurs="0"/>
        <!-- prov attributes -->
        <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:location" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:role" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
        <!-- <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/> -->
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
    <!-- <xs:anyAttribute namespace="##other" processContents="lax"/> -->
  </xs:complexType>

	<!-- From prov-xml doc: Invalidation is the start of the destruction, cessation, or expiry of an existing entity by an 
	     activity. The entity is no longer available for use (or further invalidation) after invalidation. Any generation or 
			 usage of an entity precedes its invalidation. -->
  <xs:complexType name="Invalidation">
    <xs:sequence>
        <xs:element name="entity" type="prov:IDRef"/>
        <xs:element name="activity" type="prov:IDRef" minOccurs="0"/>
        <xs:element name="time" type="xs:dateTime" minOccurs="0"/>
        <!-- prov attributes -->
        <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:location" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:role" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
        <!-- <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/> -->
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
    <!-- <xs:anyAttribute namespace="##other" processContents="lax"/> -->
  </xs:complexType>

  <!-- Component 2 -->
 
 	<!-- From prov-xml doc: A derivation is a transformation of an entity into another, an update of an entity resulting 
	     in a new one, or the construction of a new entity based on a pre-existing entity. -->
  <xs:complexType name="Derivation">
    <xs:sequence>
        <xs:element name="generatedEntity" type="prov:IDRef"/>
        <xs:element name="usedEntity" type="prov:IDRef"/>
        <xs:element name="activity" type="prov:IDRef" minOccurs="0"/>
        <xs:element name="generation" type="prov:IDRef" minOccurs="0"/>
        <xs:element name="usage" type="prov:IDRef" minOccurs="0"/>
        <!-- prov attributes -->
        <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
        <!-- <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/> -->
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
    <!-- <xs:anyAttribute namespace="##other" processContents="lax"/> -->
  </xs:complexType>

	<!-- From prox-xml doc: A revision is a derivation for which the resulting entity is a revised version of some 
	     original. -->
  <xs:complexType name="Revision">
    <xs:complexContent>
      <xs:extension base="prov:Derivation">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

	<!-- From prox-xml doc: A quotation is the repeat of (some or all of) an entity, such as text or image, 
	     by someone who may or may not be its original author. -->
  <xs:complexType name="Quotation">
    <xs:complexContent>
      <xs:extension base="prov:Derivation">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

	<!-- From prox-xml doc: A primary source for a topic refers to something produced by some agent with direct 
	     experience and knowledge about the topic, at the time of the topic's study, without benefit from hindsight. -->
  <xs:complexType name="PrimarySource">
    <xs:complexContent>
      <xs:extension base="prov:Derivation">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Component 3 -->
 
 	<!-- From prox-xml doc: An agent is something that bears some form of responsibility for an activity taking place, 
	     for the existence of an entity, or for another agent's activity.

			 In this implementation: an agent is exactly one of prov:Person, prov:Organization or prov:SoftwareAgent
	 -->
  <xs:complexType name="Agent">
    <xs:sequence>
        <!-- prov attributes -->
        <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:location" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
        <!-- <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/> -->
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
    <!-- <xs:anyAttribute namespace="##other" processContents="lax"/> -->
  </xs:complexType>

	<!-- From prox-xml doc: Person agents are people. 

			 In this implementation: a Person points to a metadata fragment describing an individual (eg. 
			   cit:CI_Individual)
			 - a prov:id defined by the user eg. ex:JohnJoker
			 - prov:type set to prov:Person
			 - prov:location set to the url of the metadata fragment describing the individual eg. 
			   http://geonetwork-catalog.com/geonetwork/srv/eng/xml.metadata.get?uuid=b87a6a71-81e0-492a-9b10-50882c14afca
	 -->
  <xs:complexType name="Person">
    <xs:complexContent>
      <xs:extension base="prov:Agent">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

	<!-- From prox-xml doc: An organization is a social or legal institution such as a company, society, etc.

			 In this implementation: an Organization points to a metadata fragment describing an organization (eg. 
			   cit:CI_Organisation)
			 - a prov:id defined by the user eg. ex:GeoscienceWorld
			 - prov:type set to prov:Organization
			 - prov:location set to the url of the metadata fragment describing the organization eg. 
			   http://geonetwork-catalog.com/geonetwork/srv/eng/xml.metadata.get?uuid=b87a6a71-81e0-492a-9b10-50882c14afca
	 -->
  <xs:complexType name="Organization">
    <xs:complexContent>
      <xs:extension base="prov:Agent">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

	<!-- From prox-xml doc: A software agent is running software. 

			 In this implementation: a SoftwareAgent points to a metadata record describing a service (eg WPS) has:
			 - a prov:id defined by the user eg. ex:TrikeWPS
			 - prov:type set to prov:SoftwareAgent
			 - prov:location set to the url of the metadata record describing the service eg. 
			   http://geonetwork-catalog.com/geonetwork/srv/eng/xml.metadata.get?uuid=b87a6a71-81e0-492a-9b10-50882c14afca
	 -->
  <xs:complexType name="SoftwareAgent">
    <xs:complexContent>
      <xs:extension base="prov:Agent">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

	<!-- From prox-xml doc: Attribution is the ascribing of an entity to an agent.  -->
  <xs:complexType name="Attribution">
    <xs:sequence>
        <xs:element name="entity" type="prov:IDRef"/>
        <xs:element name="agent" type="prov:IDRef"/>
        <!-- prov attributes -->
        <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
        <!-- <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/> -->
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
    <!-- <xs:anyAttribute namespace="##other" processContents="lax"/> -->
  </xs:complexType>

	<!-- From prox-xml doc: An activity association is an assignment of responsibility to an agent for an activity, 
	     indicating that the agent had a role in the activity. It further allows for a plan to be specified, which is the 
			 plan intended by the agent to achieve some goals in the context of this activity. -->
  <xs:complexType name="Association">
    <xs:sequence>
        <xs:element name="activity" type="prov:IDRef"/>
        <xs:element name="agent" type="prov:IDRef" minOccurs="0"/>
        <xs:element name="plan" type="prov:IDRef" minOccurs="0"/>
        <!-- prov attributes -->
        <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:role" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
        <!-- <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/> -->
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
    <!-- <xs:anyAttribute namespace="##other" processContents="lax"/> -->
  </xs:complexType>

	<!-- From prox-xml doc: Delegation is the assignment of authority and responsibility to an agent (by itself or by another 
	     agent) to carry out a specific activity as a delegate or representative, while the agent it acts on behalf of 
			 retains some responsibility for the outcome of the delegated work.  -->
  <xs:complexType name="Delegation">
    <xs:sequence>
        <xs:element name="delegate" type="prov:IDRef"/>
        <xs:element name="responsible" type="prov:IDRef"/>
        <xs:element name="activity" type="prov:IDRef" minOccurs="0"/>
        <!-- prov attributes -->
        <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
        <!-- <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/> -->
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
    <!-- <xs:anyAttribute namespace="##other" processContents="lax"/> -->
  </xs:complexType>

	<!-- From prox-xml doc: Influence is the capacity of an entity, activity, or agent to have an effect on the character, 
	     development, or behavior of another by means of usage, start, end, generation, invalidation, communication, 
			 derivation, attribution, association, or delegation. -->
  <xs:complexType name="Influence">
    <xs:sequence>
        <xs:element name="influencee" type="prov:IDRef"/>
        <xs:element name="influencer" type="prov:IDRef"/>
        <!-- prov attributes -->
        <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
        <!-- <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/> -->
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
    <!-- <xs:anyAttribute namespace="##other" processContents="lax"/> -->
  </xs:complexType>

  <!-- Component 4 -->

  <xs:complexType name="Bundle">
    <xs:complexContent>
      <xs:extension base="prov:Entity">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- bundle container and allowable PROV elements -->

  <xs:complexType name="BundleConstructor">
	<!-- <xs:choice minOccurs="0" maxOccurs="unbounded"> -->
	<xs:choice minOccurs="1" maxOccurs="unbounded">
	  <xs:element ref="prov:entity"/>
      <xs:element ref="prov:activity"/>
      <xs:element ref="prov:wasGeneratedBy"/>
      <xs:element ref="prov:used"/>
      <xs:element ref="prov:wasInformedBy"/>
      <xs:element ref="prov:wasStartedBy"/>
      <xs:element ref="prov:wasEndedBy"/>
      <xs:element ref="prov:wasInvalidatedBy"/>
      <xs:element ref="prov:wasDerivedFrom"/>
      <xs:element ref="prov:wasRevisionOf"/>
      <xs:element ref="prov:wasQuotedFrom"/>
      <xs:element ref="prov:hadPrimarySource"/>
      <xs:element ref="prov:agent"/>
      <xs:element ref="prov:person"/>
      <xs:element ref="prov:organization"/>
      <xs:element ref="prov:softwareAgent"/>
      <xs:element ref="prov:wasAttributedTo"/>
      <xs:element ref="prov:wasAssociatedWith"/>
      <xs:element ref="prov:actedOnBehalfOf"/>
      <xs:element ref="prov:wasInfluencedBy"/>
      <xs:element ref="prov:bundle"/>
      <xs:element ref="prov:specializationOf"/>
      <xs:element ref="prov:alternateOf"/>
      <xs:element ref="prov:collection"/>
      <xs:element ref="prov:emptyCollection"/>
      <xs:element ref="prov:hadMember"/>
      <xs:element ref="prov:plan"/>
      <xs:element ref="prov:other"/>
      <xs:element ref="prov:internalElement"/>
	</xs:choice>
	<xs:attribute ref="prov:id"/>
	<!-- <xs:anyAttribute namespace="##other" processContents="lax"/> -->
  </xs:complexType>

  <!-- Component 5 -->

  <xs:complexType name="Specialization">
    <xs:sequence>
      <xs:element name="specificEntity" type="prov:IDRef"/>
      <xs:element name="generalEntity" type="prov:IDRef"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="Alternate">
    <xs:sequence>
      <xs:element name="alternate1" type="prov:IDRef"/>
      <xs:element name="alternate2" type="prov:IDRef"/>
    </xs:sequence>
  </xs:complexType>
  
  <!-- Component 6 -->

  <xs:complexType name="Collection">
    <xs:complexContent>
      <xs:extension base="prov:Entity">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="EmptyCollection">
    <xs:complexContent>
      <xs:extension base="prov:Collection">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Membership">
    <xs:sequence>
      <xs:element name="collection" type="prov:IDRef"/>
      <xs:element name="entity" type="prov:IDRef" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="Plan">
    <xs:complexContent>
      <xs:extension base="prov:Entity">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="InternationalizedString">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute ref="xml:lang" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>    


   <!--
    Typed literals are encoded by means
    of xsi:type that represent the prov:datatype.
   -->
  
  <xs:element name="label" type="prov:InternationalizedString"/>
  <xs:element name="role" type="xs:anySimpleType"/>
  <xs:element name="type" type="xs:anySimpleType"/>
  <xs:element name="location" type="xs:anySimpleType"/>
  <xs:element name="value" type="xs:anySimpleType"/>

  <xs:attribute name="id" type="xs:QName"/>
  <xs:attribute name="ref" type="xs:QName"/>

  <xs:complexType name="IDRef">
    <xs:attribute ref="prov:ref" use="required" />
    <!-- <xs:anyAttribute namespace="##other" processContents="lax"/> -->
  </xs:complexType>

  <!--
     top-level definition of elements following the salami slice XSD design pattern
     to encourage integration within existing non-prov XML documents.
  -->

  <!-- Component 1 elements -->

  <xs:element name="entity"               type="prov:Entity"/>
  <xs:element name="activity"             type="prov:Activity"/>
  <xs:element name="wasGeneratedBy"       type="prov:Generation"/>
  <xs:element name="used"                 type="prov:Usage"/>
  <xs:element name="wasInformedBy"        type="prov:Communication"/>
  <xs:element name="wasStartedBy"         type="prov:Start"/>
  <xs:element name="wasEndedBy"           type="prov:End"/>
  <xs:element name="wasInvalidatedBy"     type="prov:Invalidation"/>

  <!-- Component 2 elements -->

  <xs:element name="wasDerivedFrom"       type="prov:Derivation"/>
  <xs:element name="wasRevisionOf"        type="prov:Revision"/>
  <xs:element name="wasQuotedFrom"        type="prov:Quotation"/>
  <xs:element name="hadPrimarySource"     type="prov:PrimarySource"/>

  <!-- Component 3 elements -->

  <xs:element name="agent"                type="prov:Agent"/>
  <xs:element name="person"               type="prov:Person"/>
  <xs:element name="organization"         type="prov:Organization"/>
  <xs:element name="softwareAgent"        type="prov:SoftwareAgent"/>
  <xs:element name="wasAttributedTo"      type="prov:Attribution"/>
  <xs:element name="wasAssociatedWith"    type="prov:Association"/>
  <xs:element name="actedOnBehalfOf"      type="prov:Delegation"/>
  <xs:element name="wasInfluencedBy"      type="prov:Influence"/>
  
  <!-- Component 5 elements -->

  <xs:element name="bundle"               type="prov:Bundle"/>
  <xs:element name="specializationOf"     type="prov:Specialization"/>
  <xs:element name="alternateOf"          type="prov:Alternate"/>

  <!-- Component 6 elements -->

  <xs:element name="hadMember"            type="prov:Membership"/>
  <xs:element name="collection"           type="prov:Collection"/>
  <xs:element name="emptyCollection"      type="prov:EmptyCollection"/>

  <!-- Component 7 elements -->

  <xs:element name="plan"                 type="prov:Plan"/>

  <!-- document container and allowable PROV elements -->

  <xs:element name="document" type="prov:Document" />

  <xs:complexType name="Document">
    <xs:choice maxOccurs="unbounded">
	  	<xs:element ref="prov:entity" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:activity" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:wasGeneratedBy" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:used" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:wasInformedBy" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:wasStartedBy" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:wasEndedBy" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:wasInvalidatedBy" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:wasDerivedFrom" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:wasRevisionOf" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:wasQuotedFrom" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:hadPrimarySource" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:agent" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:person" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:organization" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:softwareAgent" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:wasAttributedTo" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:wasAssociatedWith" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:actedOnBehalfOf" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:wasInfluencedBy" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:bundle" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:specializationOf" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:alternateOf" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:collection" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:emptyCollection" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:hadMember" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:plan" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:other" minOccurs="1" maxOccurs="1"/>
      <xs:element ref="prov:internalElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="bundleContent" type="prov:BundleConstructor" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
  </xs:complexType>

  <!-- abstract element used by PROV extensions -->

  <xs:element name="internalElement" abstract="true" />

  <!-- 'others' element used to contain non-PROV elements -->

	<!-- In this implementation we add three useful elements from dublin core terms -->

  <xs:element name="other" type="prov:Other"/>

  <xs:complexType name="Other">
	<xs:sequence>
		<xs:element ref="dc:identifier"/>
		<xs:element ref="dc:title"/>
		<xs:element ref="dc:description"/>
		<xs:element ref="dc:coverage" minOccurs="0"/>
		<xs:element ref="dc:subject" minOccurs="0"/>
		<xs:element ref="dct:created"/>
		<xs:element ref="dct:modified"/>
		<!-- <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/> -->
	</xs:sequence>
  </xs:complexType>

</xs:schema>
